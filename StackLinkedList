#include <iostream>
using namespace std;

struct StackNode {
    int data;
    StackNode* next;
    StackNode(int value) : data(value), next(nullptr) {}
};

class Stack {
private:
    StackNode* top;
public:
    Stack() : top(nullptr) {}
    void push(int value) {
        StackNode* newNode = new StackNode(value);
        newNode->next = top;
        top = newNode;
    }
    int pop() {
        if (!top) {
            cout << "Stack is empty!" << endl;
            return -1;
        }
        int value = top->data;
        StackNode* temp = top;
        top = top->next;
        delete temp;
        return value;
    }
    void display() {
        if (!top) {
            cout << "Stack is empty!" << endl;
            return;
        }
        StackNode* temp = top;
        cout << "Stack elements: ";
        while (temp) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
    ~Stack() {
        while (top) {
            pop();
        }
    }
};

int main() {
    Stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.display();
    cout << "Popped: " << s.pop() << endl;
    s.display();
    cout << "Popped: " << s.pop() << endl;
    cout << "Popped: " << s.pop() << endl;
    cout << "Popped: " << s.pop() << endl;
    return 0;
}
